{"version":3,"sources":["data/timezones.js","Clock.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["timezones","value","abbr","offset","isdst","text","utc","Clock","date","timezone","useState","moment","tz","datetime","setDatetime","day","toString","split","hour","minute","second","setTimeout","className","App","setTimezone","city","setCity","uniqueTimezones","timezonesData","forEach","push","apply","Set","sort","getUniqueTimezones","onChange","e","cityName","toUpperCase","handleTimezoneChange","target","map","key","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2MA4rCeA,EA5rCG,CAChB,CACEC,MAAO,yBACPC,KAAM,MACNC,QAAS,GACTC,OAAO,EACPC,KAAM,2CACNC,IAAK,IAEP,CACEL,MAAO,SACPC,KAAM,IACNC,QAAS,GACTC,OAAO,EACPC,KAAM,4CACNC,IAAK,CAAC,iBAAkB,eAAgB,sBAE1C,CACEL,MAAO,yBACPC,KAAM,MACNC,QAAS,GACTC,OAAO,EACPC,KAAM,qBACNC,IAAK,CACH,mBACA,mBACA,oBACA,mBAGJ,CACEL,MAAO,wBACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,qBACNC,IAAK,CACH,oBACA,iBACA,eACA,gBACA,oBAGJ,CACEL,MAAO,iCACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,8BACNC,IAAK,CAAC,yBAER,CACEL,MAAO,wBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,yCACNC,IAAK,CACH,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACEL,MAAO,wBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,yCACNC,IAAK,CACH,iBACA,sBACA,kBACA,oBACA,uBAGJ,CACEL,MAAO,4BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,sBACNC,IAAK,CACH,kBACA,uBACA,qBACA,oBAGJ,CACEL,MAAO,kCACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,0CACNC,IAAK,CAAC,oBAAqB,qBAE7B,CACEL,MAAO,yBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,0CACNC,IAAK,CACH,gBACA,wBACA,iBACA,mBACA,iBACA,kBACA,wBAGJ,CACEL,MAAO,gCACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,8BACNC,IAAK,CACH,iBACA,qBACA,sBACA,oBACA,kBACA,sBAEA,sBAGJ,CACEL,MAAO,wBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,yCACNC,IAAK,CACH,kBACA,uBACA,4BACA,oBACA,oBACA,8BACA,8BACA,iCACA,sBACA,uBACA,mBACA,qBAGJ,CACEL,MAAO,iCACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,kDACNC,IAAK,CACH,yBACA,iBACA,iBACA,sBACA,sBAGJ,CACEL,MAAO,+BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,2BACNC,IAAK,CAAC,iBAAkB,0BAE1B,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,kCACNC,IAAK,CACH,iBACA,iBACA,wBACA,mBACA,oBACA,kBACA,eACA,iBACA,uBAGJ,CACEL,MAAO,wBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,yCACNC,IAAK,CACH,kBACA,iBACA,6BACA,4BACA,0BACA,kBACA,8BACA,qBACA,mBACA,iBACA,mBACA,kBACA,sBACA,yBACA,sBACA,kBACA,YAGJ,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,6BACNC,IAAK,CACH,0BACA,wBACA,yBAGJ,CACEL,MAAO,0BACPC,KAAM,MACNC,QAAS,IACTC,OAAO,EACPC,KAAM,sBACNC,IAAK,CAAC,oBAER,CACEL,MAAO,yBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,uBACNC,IAAK,CAAC,qBAER,CACEL,MAAO,yBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,qCACNC,IAAK,CACH,oBACA,oBACA,kBACA,kBACA,gBACA,qBAGJ,CACEL,MAAO,kCACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,qBACNC,IAAK,CAAC,uBAAwB,mBAEhC,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,mDACNC,IAAK,CACH,mBACA,kBACA,gBACA,mBACA,uBACA,oBACA,kBACA,mBACA,qBACA,kBACA,qBACA,iBACA,qBACA,iBACA,wBACA,iBACA,kBACA,qBACA,qBACA,wBACA,sBACA,sBACA,wBACA,wBACA,mBACA,mBACA,oBACA,qBACA,oBAGJ,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,uBACNC,IAAK,CAAC,mBAAoB,sBAE5B,CACEL,MAAO,6BACPC,KAAM,MACNC,QAAS,IACTC,OAAO,EACPC,KAAM,2BACNC,IAAK,CAAC,qBAER,CACEL,MAAO,iCACPC,KAAM,QACNC,QAAS,EACTC,OAAO,EACPC,KAAM,uBACNC,IAAK,CAAC,sBAER,CACEL,MAAO,0BACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,2BACNC,IAAK,CACH,6BACA,iCACA,0BACA,6BACA,6BACA,4BACA,4BACA,uBACA,oBACA,kBACA,gBACA,oBAGJ,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,iCACNC,IAAK,CACH,oBACA,gBACA,kBACA,oBACA,iBACA,qBACA,iBACA,mBACA,qBACA,qBAGJ,CACEL,MAAO,0BACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,wBACNC,IAAK,CAAC,oBAER,CACEL,MAAO,2BACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,yBACNC,IAAK,CAAC,uBAER,CACEL,MAAO,sBACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,uBACNC,IAAK,CAAC,kBAER,CACEL,MAAO,SACPC,KAAM,IACNC,QAAS,EACTC,OAAO,EACPC,KAAM,4CACNC,IAAK,CAAC,kBAAmB,2BAE3B,CACEL,MAAO,6BACPC,KAAM,MACNC,QAAS,EACTC,OAAO,EACPC,KAAM,iCACNC,IAAK,IAEP,CACEL,MAAO,uBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,qBACNC,IAAK,CAAC,uBAAwB,oBAEhC,CACEL,MAAO,2BACPC,KAAM,OACNC,QAAS,EACTC,OAAO,EACPC,KAAM,6BACNC,IAAK,CAAC,wBAER,CACEL,MAAO,wBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,mBACNC,IAAK,CAAC,oBAAqB,oBAE7B,CACEL,MAAO,MACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,mCACNC,IAAK,CAAC,yBAER,CACEL,MAAO,oBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,0BACNC,IAAK,CACH,qBACA,kBACA,gBACA,kBAGJ,CACEL,MAAO,sBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,gCACNC,IAAK,CACH,qBACA,kBACA,gBACA,kBAGJ,CACEL,MAAO,oBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,uBACNC,IAAK,CACH,kBACA,kBACA,mBACA,gBACA,kBAGJ,CACEL,MAAO,0BACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,4BACNC,IAAK,CACH,iBACA,eACA,gBACA,gBACA,gBACA,iBACA,eACA,kBACA,cACA,kBACA,oBACA,qBACA,kBACA,qBACA,uBAGJ,CACEL,MAAO,0BACPC,KAAM,OACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,+DACNC,IAAK,CACH,sBACA,mBACA,iBACA,gBACA,kBACA,mBACA,oBACA,eACA,gBACA,cACA,cACA,oBACA,mBACA,eACA,iBACA,gBACA,kBAGJ,CACEL,MAAO,+BACPC,KAAM,OACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,gEACNC,IAAK,CACH,kBACA,oBACA,kBACA,mBACA,mBACA,gBACA,kBAGJ,CACEL,MAAO,wBACPC,KAAM,MACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,kDACNC,IAAK,CACH,eACA,kBACA,oBACA,gBACA,iBAGJ,CACEL,MAAO,iCACPC,KAAM,OACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,+CACNC,IAAK,CAAC,kBAAmB,gBAAiB,gBAAiB,kBAE7D,CACEL,MAAO,kCACPC,KAAM,QACNC,OAAQ,EACRC,OAAO,EACPC,KAAM,kCACNC,IAAK,CACH,iBACA,gBACA,qBACA,gBACA,kBACA,eACA,oBACA,gBACA,gBACA,kBACA,gBACA,oBACA,iBAGJ,CACEL,MAAO,wBACPC,KAAM,MACNC,OAAQ,EACRC,OA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","file":"static/js/main.393e7913.chunk.js","sourcesContent":["const timezones = [\n  {\n    value: \"Dateline Standard Time\",\n    abbr: \"DST\",\n    offset: -12,\n    isdst: false,\n    text: \"(UTC-12:00) International Date Line West\",\n    utc: []\n  },\n  {\n    value: \"UTC-11\",\n    abbr: \"U\",\n    offset: -11,\n    isdst: false,\n    text: \"(UTC-11:00) Coordinated Universal Time-11\",\n    utc: [\"Pacific/Midway\", \"Pacific/Niue\", \"Pacific/Pago_Pago\"]\n  },\n  {\n    value: \"Hawaiian Standard Time\",\n    abbr: \"HST\",\n    offset: -10,\n    isdst: false,\n    text: \"(UTC-10:00) Hawaii\",\n    utc: [\n      \"Pacific/Honolulu\",\n      \"Pacific/Johnston\",\n      \"Pacific/Rarotonga\",\n      \"Pacific/Tahiti\"\n    ]\n  },\n  {\n    value: \"Alaskan Standard Time\",\n    abbr: \"AKDT\",\n    offset: -8,\n    isdst: true,\n    text: \"(UTC-09:00) Alaska\",\n    utc: [\n      \"America/Anchorage\",\n      \"America/Juneau\",\n      \"America/Nome\",\n      \"America/Sitka\",\n      \"America/Yakutat\"\n    ]\n  },\n  {\n    value: \"Pacific Standard Time (Mexico)\",\n    abbr: \"PDT\",\n    offset: -7,\n    isdst: true,\n    text: \"(UTC-08:00) Baja California\",\n    utc: [\"America/Santa_Isabel\"]\n  },\n  {\n    value: \"Pacific Daylight Time\",\n    abbr: \"PDT\",\n    offset: -7,\n    isdst: true,\n    text: \"(UTC-07:00) Pacific Time (US & Canada)\",\n    utc: [\n      \"America/Dawson\",\n      \"America/Los_Angeles\",\n      \"America/Tijuana\",\n      \"America/Vancouver\",\n      \"America/Whitehorse\"\n    ]\n  },\n  {\n    value: \"Pacific Standard Time\",\n    abbr: \"PST\",\n    offset: -8,\n    isdst: false,\n    text: \"(UTC-08:00) Pacific Time (US & Canada)\",\n    utc: [\n      \"America/Dawson\",\n      \"America/Los_Angeles\",\n      \"America/Tijuana\",\n      \"America/Vancouver\",\n      \"America/Whitehorse\"\n    ]\n  },\n  {\n    value: \"US Mountain Standard Time\",\n    abbr: \"UMST\",\n    offset: -7,\n    isdst: false,\n    text: \"(UTC-07:00) Arizona\",\n    utc: [\n      \"America/Creston\",\n      \"America/Dawson_Creek\",\n      \"America/Hermosillo\",\n      \"America/Phoenix\"\n    ]\n  },\n  {\n    value: \"Mountain Standard Time (Mexico)\",\n    abbr: \"MDT\",\n    offset: -6,\n    isdst: true,\n    text: \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n    utc: [\"America/Chihuahua\", \"America/Mazatlan\"]\n  },\n  {\n    value: \"Mountain Standard Time\",\n    abbr: \"MDT\",\n    offset: -6,\n    isdst: true,\n    text: \"(UTC-07:00) Mountain Time (US & Canada)\",\n    utc: [\n      \"America/Boise\",\n      \"America/Cambridge_Bay\",\n      \"America/Denver\",\n      \"America/Edmonton\",\n      \"America/Inuvik\",\n      \"America/Ojinaga\",\n      \"America/Yellowknife\"\n    ]\n  },\n  {\n    value: \"Central America Standard Time\",\n    abbr: \"CAST\",\n    offset: -6,\n    isdst: false,\n    text: \"(UTC-06:00) Central America\",\n    utc: [\n      \"America/Belize\",\n      \"America/Costa_Rica\",\n      \"America/El_Salvador\",\n      \"America/Guatemala\",\n      \"America/Managua\",\n      \"America/Tegucigalpa\",\n\n      \"Pacific/Galapagos\"\n    ]\n  },\n  {\n    value: \"Central Standard Time\",\n    abbr: \"CDT\",\n    offset: -5,\n    isdst: true,\n    text: \"(UTC-06:00) Central Time (US & Canada)\",\n    utc: [\n      \"America/Chicago\",\n      \"America/Indiana/Knox\",\n      \"America/Indiana/Tell_City\",\n      \"America/Matamoros\",\n      \"America/Menominee\",\n      \"America/North_Dakota/Beulah\",\n      \"America/North_Dakota/Center\",\n      \"America/North_Dakota/New_Salem\",\n      \"America/Rainy_River\",\n      \"America/Rankin_Inlet\",\n      \"America/Resolute\",\n      \"America/Winnipeg\"\n    ]\n  },\n  {\n    value: \"Central Standard Time (Mexico)\",\n    abbr: \"CDT\",\n    offset: -5,\n    isdst: true,\n    text: \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n    utc: [\n      \"America/Bahia_Banderas\",\n      \"America/Cancun\",\n      \"America/Merida\",\n      \"America/Mexico_City\",\n      \"America/Monterrey\"\n    ]\n  },\n  {\n    value: \"Canada Central Standard Time\",\n    abbr: \"CCST\",\n    offset: -6,\n    isdst: false,\n    text: \"(UTC-06:00) Saskatchewan\",\n    utc: [\"America/Regina\", \"America/Swift_Current\"]\n  },\n  {\n    value: \"SA Pacific Standard Time\",\n    abbr: \"SPST\",\n    offset: -5,\n    isdst: false,\n    text: \"(UTC-05:00) Bogota, Lima, Quito\",\n    utc: [\n      \"America/Bogota\",\n      \"America/Cayman\",\n      \"America/Coral_Harbour\",\n      \"America/Eirunepe\",\n      \"America/Guayaquil\",\n      \"America/Jamaica\",\n      \"America/Lima\",\n      \"America/Panama\",\n      \"America/Rio_Branco\"\n    ]\n  },\n  {\n    value: \"Eastern Standard Time\",\n    abbr: \"EDT\",\n    offset: -4,\n    isdst: true,\n    text: \"(UTC-05:00) Eastern Time (US & Canada)\",\n    utc: [\n      \"America/Detroit\",\n      \"America/Havana\",\n      \"America/Indiana/Petersburg\",\n      \"America/Indiana/Vincennes\",\n      \"America/Indiana/Winamac\",\n      \"America/Iqaluit\",\n      \"America/Kentucky/Monticello\",\n      \"America/Louisville\",\n      \"America/Montreal\",\n      \"America/Nassau\",\n      \"America/New_York\",\n      \"America/Nipigon\",\n      \"America/Pangnirtung\",\n      \"America/Port-au-Prince\",\n      \"America/Thunder_Bay\",\n      \"America/Toronto\",\n      \"EST5EDT\"\n    ]\n  },\n  {\n    value: \"US Eastern Standard Time\",\n    abbr: \"UEDT\",\n    offset: -4,\n    isdst: true,\n    text: \"(UTC-05:00) Indiana (East)\",\n    utc: [\n      \"America/Indiana/Marengo\",\n      \"America/Indiana/Vevay\",\n      \"America/Indianapolis\"\n    ]\n  },\n  {\n    value: \"Venezuela Standard Time\",\n    abbr: \"VST\",\n    offset: -4.5,\n    isdst: false,\n    text: \"(UTC-04:30) Caracas\",\n    utc: [\"America/Caracas\"]\n  },\n  {\n    value: \"Paraguay Standard Time\",\n    abbr: \"PYT\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Asuncion\",\n    utc: [\"America/Asuncion\"]\n  },\n  {\n    value: \"Atlantic Standard Time\",\n    abbr: \"ADT\",\n    offset: -3,\n    isdst: true,\n    text: \"(UTC-04:00) Atlantic Time (Canada)\",\n    utc: [\n      \"America/Glace_Bay\",\n      \"America/Goose_Bay\",\n      \"America/Halifax\",\n      \"America/Moncton\",\n      \"America/Thule\",\n      \"Atlantic/Bermuda\"\n    ]\n  },\n  {\n    value: \"Central Brazilian Standard Time\",\n    abbr: \"CBST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Cuiaba\",\n    utc: [\"America/Campo_Grande\", \"America/Cuiaba\"]\n  },\n  {\n    value: \"SA Western Standard Time\",\n    abbr: \"SWST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n    utc: [\n      \"America/Anguilla\",\n      \"America/Antigua\",\n      \"America/Aruba\",\n      \"America/Barbados\",\n      \"America/Blanc-Sablon\",\n      \"America/Boa_Vista\",\n      \"America/Curacao\",\n      \"America/Dominica\",\n      \"America/Grand_Turk\",\n      \"America/Grenada\",\n      \"America/Guadeloupe\",\n      \"America/Guyana\",\n      \"America/Kralendijk\",\n      \"America/La_Paz\",\n      \"America/Lower_Princes\",\n      \"America/Manaus\",\n      \"America/Marigot\",\n      \"America/Martinique\",\n      \"America/Montserrat\",\n      \"America/Port_of_Spain\",\n      \"America/Porto_Velho\",\n      \"America/Puerto_Rico\",\n      \"America/Santo_Domingo\",\n      \"America/St_Barthelemy\",\n      \"America/St_Kitts\",\n      \"America/St_Lucia\",\n      \"America/St_Thomas\",\n      \"America/St_Vincent\",\n      \"America/Tortola\"\n    ]\n  },\n  {\n    value: \"Pacific SA Standard Time\",\n    abbr: \"PSST\",\n    offset: -4,\n    isdst: false,\n    text: \"(UTC-04:00) Santiago\",\n    utc: [\"America/Santiago\", \"Antarctica/Palmer\"]\n  },\n  {\n    value: \"Newfoundland Standard Time\",\n    abbr: \"NDT\",\n    offset: -2.5,\n    isdst: true,\n    text: \"(UTC-03:30) Newfoundland\",\n    utc: [\"America/St_Johns\"]\n  },\n  {\n    value: \"E. South America Standard Time\",\n    abbr: \"ESAST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Brasilia\",\n    utc: [\"America/Sao_Paulo\"]\n  },\n  {\n    value: \"Argentina Standard Time\",\n    abbr: \"AST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Buenos Aires\",\n    utc: [\n      \"America/Argentina/La_Rioja\",\n      \"America/Argentina/Rio_Gallegos\",\n      \"America/Argentina/Salta\",\n      \"America/Argentina/San_Juan\",\n      \"America/Argentina/San_Luis\",\n      \"America/Argentina/Tucuman\",\n      \"America/Argentina/Ushuaia\",\n      \"America/Buenos_Aires\",\n      \"America/Catamarca\",\n      \"America/Cordoba\",\n      \"America/Jujuy\",\n      \"America/Mendoza\"\n    ]\n  },\n  {\n    value: \"SA Eastern Standard Time\",\n    abbr: \"SEST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Cayenne, Fortaleza\",\n    utc: [\n      \"America/Araguaina\",\n      \"America/Belem\",\n      \"America/Cayenne\",\n      \"America/Fortaleza\",\n      \"America/Maceio\",\n      \"America/Paramaribo\",\n      \"America/Recife\",\n      \"America/Santarem\",\n      \"Antarctica/Rothera\",\n      \"Atlantic/Stanley\"\n    ]\n  },\n  {\n    value: \"Greenland Standard Time\",\n    abbr: \"GDT\",\n    offset: -3,\n    isdst: true,\n    text: \"(UTC-03:00) Greenland\",\n    utc: [\"America/Godthab\"]\n  },\n  {\n    value: \"Montevideo Standard Time\",\n    abbr: \"MST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Montevideo\",\n    utc: [\"America/Montevideo\"]\n  },\n  {\n    value: \"Bahia Standard Time\",\n    abbr: \"BST\",\n    offset: -3,\n    isdst: false,\n    text: \"(UTC-03:00) Salvador\",\n    utc: [\"America/Bahia\"]\n  },\n  {\n    value: \"UTC-02\",\n    abbr: \"U\",\n    offset: -2,\n    isdst: false,\n    text: \"(UTC-02:00) Coordinated Universal Time-02\",\n    utc: [\"America/Noronha\", \"Atlantic/South_Georgia\"]\n  },\n  {\n    value: \"Mid-Atlantic Standard Time\",\n    abbr: \"MDT\",\n    offset: -1,\n    isdst: true,\n    text: \"(UTC-02:00) Mid-Atlantic - Old\",\n    utc: []\n  },\n  {\n    value: \"Azores Standard Time\",\n    abbr: \"ADT\",\n    offset: 0,\n    isdst: true,\n    text: \"(UTC-01:00) Azores\",\n    utc: [\"America/Scoresbysund\", \"Atlantic/Azores\"]\n  },\n  {\n    value: \"Cape Verde Standard Time\",\n    abbr: \"CVST\",\n    offset: -1,\n    isdst: false,\n    text: \"(UTC-01:00) Cape Verde Is.\",\n    utc: [\"Atlantic/Cape_Verde\"]\n  },\n  {\n    value: \"Morocco Standard Time\",\n    abbr: \"MDT\",\n    offset: 1,\n    isdst: true,\n    text: \"(UTC) Casablanca\",\n    utc: [\"Africa/Casablanca\", \"Africa/El_Aaiun\"]\n  },\n  {\n    value: \"UTC\",\n    abbr: \"UTC\",\n    offset: 0,\n    isdst: false,\n    text: \"(UTC) Coordinated Universal Time\",\n    utc: [\"America/Danmarkshavn\"]\n  },\n  {\n    value: \"GMT Standard Time\",\n    abbr: \"GMT\",\n    offset: 0,\n    isdst: false,\n    text: \"(UTC) Edinburgh, London\",\n    utc: [\n      \"Europe/Isle_of_Man\",\n      \"Europe/Guernsey\",\n      \"Europe/Jersey\",\n      \"Europe/London\"\n    ]\n  },\n  {\n    value: \"British Summer Time\",\n    abbr: \"BST\",\n    offset: 1,\n    isdst: true,\n    text: \"(UTC+01:00) Edinburgh, London\",\n    utc: [\n      \"Europe/Isle_of_Man\",\n      \"Europe/Guernsey\",\n      \"Europe/Jersey\",\n      \"Europe/London\"\n    ]\n  },\n  {\n    value: \"GMT Standard Time\",\n    abbr: \"GDT\",\n    offset: 1,\n    isdst: true,\n    text: \"(UTC) Dublin, Lisbon\",\n    utc: [\n      \"Atlantic/Canary\",\n      \"Atlantic/Faeroe\",\n      \"Atlantic/Madeira\",\n      \"Europe/Dublin\",\n      \"Europe/Lisbon\"\n    ]\n  },\n  {\n    value: \"Greenwich Standard Time\",\n    abbr: \"GST\",\n    offset: 0,\n    isdst: false,\n    text: \"(UTC) Monrovia, Reykjavik\",\n    utc: [\n      \"Africa/Abidjan\",\n      \"Africa/Accra\",\n      \"Africa/Bamako\",\n      \"Africa/Banjul\",\n      \"Africa/Bissau\",\n      \"Africa/Conakry\",\n      \"Africa/Dakar\",\n      \"Africa/Freetown\",\n      \"Africa/Lome\",\n      \"Africa/Monrovia\",\n      \"Africa/Nouakchott\",\n      \"Africa/Ouagadougou\",\n      \"Africa/Sao_Tome\",\n      \"Atlantic/Reykjavik\",\n      \"Atlantic/St_Helena\"\n    ]\n  },\n  {\n    value: \"W. Europe Standard Time\",\n    abbr: \"WEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n    utc: [\n      \"Arctic/Longyearbyen\",\n      \"Europe/Amsterdam\",\n      \"Europe/Andorra\",\n      \"Europe/Berlin\",\n      \"Europe/Busingen\",\n      \"Europe/Gibraltar\",\n      \"Europe/Luxembourg\",\n      \"Europe/Malta\",\n      \"Europe/Monaco\",\n      \"Europe/Oslo\",\n      \"Europe/Rome\",\n      \"Europe/San_Marino\",\n      \"Europe/Stockholm\",\n      \"Europe/Vaduz\",\n      \"Europe/Vatican\",\n      \"Europe/Vienna\",\n      \"Europe/Zurich\"\n    ]\n  },\n  {\n    value: \"Central Europe Standard Time\",\n    abbr: \"CEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n    utc: [\n      \"Europe/Belgrade\",\n      \"Europe/Bratislava\",\n      \"Europe/Budapest\",\n      \"Europe/Ljubljana\",\n      \"Europe/Podgorica\",\n      \"Europe/Prague\",\n      \"Europe/Tirane\"\n    ]\n  },\n  {\n    value: \"Romance Standard Time\",\n    abbr: \"RDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n    utc: [\n      \"Africa/Ceuta\",\n      \"Europe/Brussels\",\n      \"Europe/Copenhagen\",\n      \"Europe/Madrid\",\n      \"Europe/Paris\"\n    ]\n  },\n  {\n    value: \"Central European Standard Time\",\n    abbr: \"CEDT\",\n    offset: 2,\n    isdst: true,\n    text: \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n    utc: [\"Europe/Sarajevo\", \"Europe/Skopje\", \"Europe/Warsaw\", \"Europe/Zagreb\"]\n  },\n  {\n    value: \"W. Central Africa Standard Time\",\n    abbr: \"WCAST\",\n    offset: 1,\n    isdst: false,\n    text: \"(UTC+01:00) West Central Africa\",\n    utc: [\n      \"Africa/Algiers\",\n      \"Africa/Bangui\",\n      \"Africa/Brazzaville\",\n      \"Africa/Douala\",\n      \"Africa/Kinshasa\",\n      \"Africa/Lagos\",\n      \"Africa/Libreville\",\n      \"Africa/Luanda\",\n      \"Africa/Malabo\",\n      \"Africa/Ndjamena\",\n      \"Africa/Niamey\",\n      \"Africa/Porto-Novo\",\n      \"Africa/Tunis\"\n    ]\n  },\n  {\n    value: \"Namibia Standard Time\",\n    abbr: \"NST\",\n    offset: 1,\n    isdst: false,\n    text: \"(UTC+01:00) Windhoek\",\n    utc: [\"Africa/Windhoek\"]\n  },\n  {\n    value: \"GTB Standard Time\",\n    abbr: \"GDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Athens, Bucharest\",\n    utc: [\n      \"Asia/Nicosia\",\n      \"Europe/Athens\",\n      \"Europe/Bucharest\",\n      \"Europe/Chisinau\"\n    ]\n  },\n  {\n    value: \"Middle East Standard Time\",\n    abbr: \"MEDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Beirut\",\n    utc: [\"Asia/Beirut\"]\n  },\n  {\n    value: \"Egypt Standard Time\",\n    abbr: \"EST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Cairo\",\n    utc: [\"Africa/Cairo\"]\n  },\n  {\n    value: \"Syria Standard Time\",\n    abbr: \"SDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Damascus\",\n    utc: [\"Asia/Damascus\"]\n  },\n  {\n    value: \"E. Europe Standard Time\",\n    abbr: \"EEDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) E. Europe\",\n    utc: [\n      \"Asia/Nicosia\",\n      \"Europe/Athens\",\n      \"Europe/Bucharest\",\n      \"Europe/Chisinau\",\n      \"Europe/Helsinki\",\n      \"Europe/Kiev\",\n      \"Europe/Mariehamn\",\n      \"Europe/Nicosia\",\n      \"Europe/Riga\",\n      \"Europe/Sofia\",\n      \"Europe/Tallinn\",\n      \"Europe/Uzhgorod\",\n      \"Europe/Vilnius\",\n      \"Europe/Zaporozhye\"\n    ]\n  },\n  {\n    value: \"South Africa Standard Time\",\n    abbr: \"SAST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Harare, Pretoria\",\n    utc: [\n      \"Africa/Blantyre\",\n      \"Africa/Bujumbura\",\n      \"Africa/Gaborone\",\n      \"Africa/Harare\",\n      \"Africa/Johannesburg\",\n      \"Africa/Kigali\",\n      \"Africa/Lubumbashi\",\n      \"Africa/Lusaka\",\n      \"Africa/Maputo\",\n      \"Africa/Maseru\",\n      \"Africa/Mbabane\"\n    ]\n  },\n  {\n    value: \"FLE Standard Time\",\n    abbr: \"FDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n    utc: [\n      \"Europe/Helsinki\",\n      \"Europe/Kiev\",\n      \"Europe/Mariehamn\",\n      \"Europe/Riga\",\n      \"Europe/Sofia\",\n      \"Europe/Tallinn\",\n      \"Europe/Uzhgorod\",\n      \"Europe/Vilnius\",\n      \"Europe/Zaporozhye\"\n    ]\n  },\n  {\n    value: \"Turkey Standard Time\",\n    abbr: \"TDT\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Istanbul\",\n    utc: [\"Europe/Istanbul\"]\n  },\n  {\n    value: \"Israel Standard Time\",\n    abbr: \"JDT\",\n    offset: 3,\n    isdst: true,\n    text: \"(UTC+02:00) Jerusalem\",\n    utc: [\"Asia/Jerusalem\"]\n  },\n  {\n    value: \"Libya Standard Time\",\n    abbr: \"LST\",\n    offset: 2,\n    isdst: false,\n    text: \"(UTC+02:00) Tripoli\",\n    utc: [\"Africa/Tripoli\"]\n  },\n  {\n    value: \"Jordan Standard Time\",\n    abbr: \"JST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Amman\",\n    utc: [\"Asia/Amman\"]\n  },\n  {\n    value: \"Arabic Standard Time\",\n    abbr: \"AST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Baghdad\",\n    utc: [\"Asia/Baghdad\"]\n  },\n  {\n    value: \"Kaliningrad Standard Time\",\n    abbr: \"KST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Kaliningrad, Minsk\",\n    utc: [\"Europe/Kaliningrad\", \"Europe/Minsk\"]\n  },\n  {\n    value: \"Arab Standard Time\",\n    abbr: \"AST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Kuwait, Riyadh\",\n    utc: [\n      \"Asia/Aden\",\n      \"Asia/Bahrain\",\n      \"Asia/Kuwait\",\n      \"Asia/Qatar\",\n      \"Asia/Riyadh\"\n    ]\n  },\n  {\n    value: \"E. Africa Standard Time\",\n    abbr: \"EAST\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Nairobi\",\n    utc: [\n      \"Africa/Addis_Ababa\",\n      \"Africa/Asmera\",\n      \"Africa/Dar_es_Salaam\",\n      \"Africa/Djibouti\",\n      \"Africa/Juba\",\n      \"Africa/Kampala\",\n      \"Africa/Khartoum\",\n      \"Africa/Mogadishu\",\n      \"Africa/Nairobi\",\n      \"Antarctica/Syowa\",\n      \"Indian/Antananarivo\",\n      \"Indian/Comoro\",\n      \"Indian/Mayotte\"\n    ]\n  },\n  {\n    value: \"Moscow Standard Time\",\n    abbr: \"MSK\",\n    offset: 3,\n    isdst: false,\n    text: \"(UTC+03:00) Moscow, St. Petersburg, Volgograd\",\n    utc: [\n      \"Europe/Kirov\",\n      \"Europe/Moscow\",\n      \"Europe/Simferopol\",\n      \"Europe/Volgograd\"\n    ]\n  },\n  {\n    value: \"Samara Time\",\n    abbr: \"SAMT\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n    utc: [\"Europe/Astrakhan\", \"Europe/Samara\", \"Europe/Ulyanovsk\"]\n  },\n  {\n    value: \"Iran Standard Time\",\n    abbr: \"IDT\",\n    offset: 4.5,\n    isdst: true,\n    text: \"(UTC+03:30) Tehran\",\n    utc: [\"Asia/Tehran\"]\n  },\n  {\n    value: \"Arabian Standard Time\",\n    abbr: \"AST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Abu Dhabi, Muscat\",\n    utc: [\"Asia/Dubai\", \"Asia/Muscat\"]\n  },\n  {\n    value: \"Azerbaijan Standard Time\",\n    abbr: \"ADT\",\n    offset: 5,\n    isdst: true,\n    text: \"(UTC+04:00) Baku\",\n    utc: [\"Asia/Baku\"]\n  },\n  {\n    value: \"Mauritius Standard Time\",\n    abbr: \"MST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Port Louis\",\n    utc: [\"Indian/Mahe\", \"Indian/Mauritius\", \"Indian/Reunion\"]\n  },\n  {\n    value: \"Georgian Standard Time\",\n    abbr: \"GET\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Tbilisi\",\n    utc: [\"Asia/Tbilisi\"]\n  },\n  {\n    value: \"Caucasus Standard Time\",\n    abbr: \"CST\",\n    offset: 4,\n    isdst: false,\n    text: \"(UTC+04:00) Yerevan\",\n    utc: [\"Asia/Yerevan\"]\n  },\n  {\n    value: \"Afghanistan Standard Time\",\n    abbr: \"AST\",\n    offset: 4.5,\n    isdst: false,\n    text: \"(UTC+04:30) Kabul\",\n    utc: [\"Asia/Kabul\"]\n  },\n  {\n    value: \"West Asia Standard Time\",\n    abbr: \"WAST\",\n    offset: 5,\n    isdst: false,\n    text: \"(UTC+05:00) Ashgabat, Tashkent\",\n    utc: [\n      \"Antarctica/Mawson\",\n      \"Asia/Aqtau\",\n      \"Asia/Aqtobe\",\n      \"Asia/Ashgabat\",\n      \"Asia/Dushanbe\",\n      \"Asia/Oral\",\n      \"Asia/Samarkand\",\n      \"Asia/Tashkent\",\n      \"Indian/Kerguelen\",\n      \"Indian/Maldives\"\n    ]\n  },\n  {\n    value: \"Yekaterinburg Time\",\n    abbr: \"YEKT\",\n    offset: 5,\n    isdst: false,\n    text: \"(UTC+05:00) Yekaterinburg\",\n    utc: [\"Asia/Yekaterinburg\"]\n  },\n  {\n    value: \"Pakistan Standard Time\",\n    abbr: \"PKT\",\n    offset: 5,\n    isdst: false,\n    text: \"(UTC+05:00) Islamabad, Karachi\",\n    utc: [\"Asia/Karachi\"]\n  },\n  {\n    value: \"India Standard Time\",\n    abbr: \"IST\",\n    offset: 5.5,\n    isdst: false,\n    text: \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n    utc: [\"Asia/Kolkata\"]\n  },\n  {\n    value: \"Sri Lanka Standard Time\",\n    abbr: \"SLST\",\n    offset: 5.5,\n    isdst: false,\n    text: \"(UTC+05:30) Sri Jayawardenepura\",\n    utc: [\"Asia/Colombo\"]\n  },\n  {\n    value: \"Nepal Standard Time\",\n    abbr: \"NST\",\n    offset: 5.75,\n    isdst: false,\n    text: \"(UTC+05:45) Kathmandu\",\n    utc: [\"Asia/Kathmandu\"]\n  },\n  {\n    value: \"Central Asia Standard Time\",\n    abbr: \"CAST\",\n    offset: 6,\n    isdst: false,\n    text: \"(UTC+06:00) Astana\",\n    utc: [\n      \"Antarctica/Vostok\",\n      \"Asia/Almaty\",\n      \"Asia/Bishkek\",\n      \"Asia/Qyzylorda\",\n      \"Asia/Urumqi\",\n      \"Indian/Chagos\"\n    ]\n  },\n  {\n    value: \"Bangladesh Standard Time\",\n    abbr: \"BST\",\n    offset: 6,\n    isdst: false,\n    text: \"(UTC+06:00) Dhaka\",\n    utc: [\"Asia/Dhaka\", \"Asia/Thimphu\"]\n  },\n  {\n    value: \"Myanmar Standard Time\",\n    abbr: \"MST\",\n    offset: 6.5,\n    isdst: false,\n    text: \"(UTC+06:30) Yangon (Rangoon)\",\n    utc: [\"Asia/Rangoon\", \"Indian/Cocos\"]\n  },\n  {\n    value: \"SE Asia Standard Time\",\n    abbr: \"SAST\",\n    offset: 7,\n    isdst: false,\n    text: \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n    utc: [\n      \"Antarctica/Davis\",\n      \"Asia/Bangkok\",\n      \"Asia/Hovd\",\n      \"Asia/Jakarta\",\n      \"Asia/Phnom_Penh\",\n      \"Asia/Pontianak\",\n      \"Asia/Saigon\",\n      \"Asia/Vientiane\",\n\n      \"Indian/Christmas\"\n    ]\n  },\n  {\n    value: \"N. Central Asia Standard Time\",\n    abbr: \"NCAST\",\n    offset: 7,\n    isdst: false,\n    text: \"(UTC+07:00) Novosibirsk\",\n    utc: [\"Asia/Novokuznetsk\", \"Asia/Novosibirsk\", \"Asia/Omsk\"]\n  },\n  {\n    value: \"China Standard Time\",\n    abbr: \"CST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n    utc: [\"Asia/Hong_Kong\", \"Asia/Macau\", \"Asia/Shanghai\"]\n  },\n  {\n    value: \"North Asia Standard Time\",\n    abbr: \"NAST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Krasnoyarsk\",\n    utc: [\"Asia/Krasnoyarsk\"]\n  },\n  {\n    value: \"Singapore Standard Time\",\n    abbr: \"MPST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Kuala Lumpur, Singapore\",\n    utc: [\n      \"Asia/Brunei\",\n      \"Asia/Kuala_Lumpur\",\n      \"Asia/Kuching\",\n      \"Asia/Makassar\",\n      \"Asia/Manila\",\n      \"Asia/Singapore\"\n    ]\n  },\n  {\n    value: \"W. Australia Standard Time\",\n    abbr: \"WAST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Perth\",\n    utc: [\"Antarctica/Casey\", \"Australia/Perth\"]\n  },\n  {\n    value: \"Taipei Standard Time\",\n    abbr: \"TST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Taipei\",\n    utc: [\"Asia/Taipei\"]\n  },\n  {\n    value: \"Ulaanbaatar Standard Time\",\n    abbr: \"UST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Ulaanbaatar\",\n    utc: [\"Asia/Choibalsan\", \"Asia/Ulaanbaatar\"]\n  },\n  {\n    value: \"North Asia East Standard Time\",\n    abbr: \"NAEST\",\n    offset: 8,\n    isdst: false,\n    text: \"(UTC+08:00) Irkutsk\",\n    utc: [\"Asia/Irkutsk\"]\n  },\n  {\n    value: \"Japan Standard Time\",\n    abbr: \"JST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n    utc: [\"Asia/Dili\", \"Asia/Jayapura\", \"Asia/Tokyo\", \"Pacific/Palau\"]\n  },\n  {\n    value: \"Korea Standard Time\",\n    abbr: \"KST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Seoul\",\n    utc: [\"Asia/Pyongyang\", \"Asia/Seoul\"]\n  },\n  {\n    value: \"Cen. Australia Standard Time\",\n    abbr: \"CAST\",\n    offset: 9.5,\n    isdst: false,\n    text: \"(UTC+09:30) Adelaide\",\n    utc: [\"Australia/Adelaide\", \"Australia/Broken_Hill\"]\n  },\n  {\n    value: \"AUS Central Standard Time\",\n    abbr: \"ACST\",\n    offset: 9.5,\n    isdst: false,\n    text: \"(UTC+09:30) Darwin\",\n    utc: [\"Australia/Darwin\"]\n  },\n  {\n    value: \"E. Australia Standard Time\",\n    abbr: \"EAST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Brisbane\",\n    utc: [\"Australia/Brisbane\", \"Australia/Lindeman\"]\n  },\n  {\n    value: \"AUS Eastern Standard Time\",\n    abbr: \"AEST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n    utc: [\"Australia/Melbourne\", \"Australia/Sydney\"]\n  },\n  {\n    value: \"West Pacific Standard Time\",\n    abbr: \"WPST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Guam, Port Moresby\",\n    utc: [\n      \"Antarctica/DumontDUrville\",\n\n      \"Pacific/Guam\",\n      \"Pacific/Port_Moresby\",\n      \"Pacific/Saipan\",\n      \"Pacific/Truk\"\n    ]\n  },\n  {\n    value: \"Tasmania Standard Time\",\n    abbr: \"TST\",\n    offset: 10,\n    isdst: false,\n    text: \"(UTC+10:00) Hobart\",\n    utc: [\"Australia/Currie\", \"Australia/Hobart\"]\n  },\n  {\n    value: \"Yakutsk Standard Time\",\n    abbr: \"YST\",\n    offset: 9,\n    isdst: false,\n    text: \"(UTC+09:00) Yakutsk\",\n    utc: [\"Asia/Chita\", \"Asia/Khandyga\", \"Asia/Yakutsk\"]\n  },\n  {\n    value: \"Central Pacific Standard Time\",\n    abbr: \"CPST\",\n    offset: 11,\n    isdst: false,\n    text: \"(UTC+11:00) Solomon Is., New Caledonia\",\n    utc: [\n      \"Antarctica/Macquarie\",\n\n      \"Pacific/Efate\",\n      \"Pacific/Guadalcanal\",\n      \"Pacific/Kosrae\",\n      \"Pacific/Noumea\",\n      \"Pacific/Ponape\"\n    ]\n  },\n  {\n    value: \"Vladivostok Standard Time\",\n    abbr: \"VST\",\n    offset: 11,\n    isdst: false,\n    text: \"(UTC+11:00) Vladivostok\",\n    utc: [\"Asia/Sakhalin\", \"Asia/Ust-Nera\", \"Asia/Vladivostok\"]\n  },\n  {\n    value: \"New Zealand Standard Time\",\n    abbr: \"NZST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Auckland, Wellington\",\n    utc: [\"Antarctica/McMurdo\", \"Pacific/Auckland\"]\n  },\n  {\n    value: \"UTC+12\",\n    abbr: \"U\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Coordinated Universal Time+12\",\n    utc: [\n      \"Pacific/Funafuti\",\n      \"Pacific/Kwajalein\",\n      \"Pacific/Majuro\",\n      \"Pacific/Nauru\",\n      \"Pacific/Tarawa\",\n      \"Pacific/Wake\",\n      \"Pacific/Wallis\"\n    ]\n  },\n  {\n    value: \"Fiji Standard Time\",\n    abbr: \"FST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Fiji\",\n    utc: [\"Pacific/Fiji\"]\n  },\n  {\n    value: \"Magadan Standard Time\",\n    abbr: \"MST\",\n    offset: 12,\n    isdst: false,\n    text: \"(UTC+12:00) Magadan\",\n    utc: [\"Asia/Anadyr\", \"Asia/Kamchatka\", \"Asia/Magadan\", \"Asia/Srednekolymsk\"]\n  },\n  {\n    value: \"Kamchatka Standard Time\",\n    abbr: \"KDT\",\n    offset: 13,\n    isdst: true,\n    text: \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n    utc: [\"Asia/Kamchatka\"]\n  },\n  {\n    value: \"Tonga Standard Time\",\n    abbr: \"TST\",\n    offset: 13,\n    isdst: false,\n    text: \"(UTC+13:00) Nuku'alofa\",\n    utc: [\"Pacific/Enderbury\", \"Pacific/Fakaofo\", \"Pacific/Tongatapu\"]\n  },\n  {\n    value: \"Samoa Standard Time\",\n    abbr: \"SST\",\n    offset: 13,\n    isdst: false,\n    text: \"(UTC+13:00) Samoa\",\n    utc: [\"Pacific/Apia\"]\n  }\n];\n\nexport default timezones;\n","import React, { useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport { getDateTimeInfo } from \"./utils\";\n\nconst Clock = ({ timezone }) => {\n  const [datetime, setDatetime] = useState(moment.tz(timezone));\n  const updateDatetime = () => {\n    setTimeout(() => {\n      setDatetime(moment.tz(timezone));\n    }, 1000);\n  };\n\n  const { day, hour, minute, second } = getDateTimeInfo(datetime.toString());\n\n  updateDatetime();\n\n  return (\n    <div className=\"clock\">\n      <div className=\"body\">\n        <div>\n          <div className=\"box\">{day} : </div>\n          <div className=\"sub\">Day</div>\n        </div>\n        <div>\n          <div className=\"box\">{hour} : </div>\n          <div className=\"sub\">HOURS</div>\n        </div>\n        <div>\n          <div className=\"box\">{minute} :</div>\n          <div className=\"sub\">MINUTES</div>\n        </div>\n        <div>\n          <div className=\"box\">{second}</div>\n          <div className=\"sub\">SECONDS</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Clock;\n","import timezonesData from \"../src/data/timezones\";\n\nconst getDateTimeInfo = date => {\n  const day = date.split(\" \")[0];\n  const hour = date.split(\" \")[4].split(\":\")[0];\n  const minute = date.split(\" \")[4].split(\":\")[1];\n  const second = date.split(\" \")[4].split(\":\")[2];\n  return { day, hour, minute, second };\n};\n\nconst getUniqueTimezones = () => {\n  const timezones = [];\n  timezonesData.forEach(timezone => {\n    timezones.push.apply(timezones, timezone.utc);\n  });\n  const uniqueTimezones = [...new Set(timezones)].sort();\n  return uniqueTimezones;\n};\n\nexport { getDateTimeInfo, getUniqueTimezones };\n","import React, { useState } from \"react\";\nimport Clock from \"./Clock\";\nimport { getUniqueTimezones } from \"./utils\";\n\nconst App = () => {\n  const [timezone, setTimezone] = useState(\"Africa/Abidjan\");\n  const [city, setCity] = useState(\"ABIDJAN\");\n  const uniqueTimezones = getUniqueTimezones();\n\n  const handleTimezoneChange = timezone => {\n    const cityName = timezone.split(\"/\")[1];\n    setTimezone(timezone);\n    setCity(cityName.toUpperCase());\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header-text\">SELECT YOUR TIMEZONE</div>\n      <select\n        onChange={e => handleTimezoneChange(e.target.value)}\n        className=\"select-menu\"\n      >\n        {uniqueTimezones.map(timezone => {\n          return (\n            <option value={timezone} key={timezone} className=\"option\">\n              {timezone}\n            </option>\n          );\n        })}\n      </select>\n      <Clock timezone={timezone} />\n      <div className=\"city-info\">CITY</div>\n      <div className=\"city-name\">{city}</div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}